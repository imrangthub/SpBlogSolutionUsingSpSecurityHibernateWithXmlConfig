<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:p="http://www.springframework.org/schema/p" 
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/security
                           http://www.springframework.org/schema/security/spring-security.xsd">

   <security:http auto-config="true">
   <security:csrf disabled="true"/>
        <security:form-login
          login-page='/auth/login'
          password-parameter="password"
          username-parameter="email"
          default-target-url = "/post/"
         
          />
          
          <security:logout
		    logout-success-url="/"
		    logout-url="/auth/logout"
		  />


	  <security:intercept-url pattern="/post/**" access="hasRole('ROLE_ADMIN')" />
	</security:http>
	
	<!-- Select users and user_roles from database -->
	<security:authentication-manager>
	  <security:authentication-provider>
	  <security:password-encoder ref="passwordEncoder" />
		<security:jdbc-user-service data-source-ref="securityDataSource"
		  users-by-username-query="select email, password, active from user where email= ?"
		  authorities-by-username-query="select u.email, r.role from user u inner join user_role ur on(u.id=ur.user_id) inner join role r on(ur.role_id=r.id) where u.email=? " />
	  </security:authentication-provider>
	</security:authentication-manager>
	
    <bean id ="passwordEncoder" class = "org.springframework.security.crypto.password.NoOpPasswordEncoder" factory-method = "getInstance" />
	
	
</beans>

